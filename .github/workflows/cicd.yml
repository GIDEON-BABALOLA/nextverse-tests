name: Deploy Node and React Applications
on:
  push:
    branches:
      - master

jobs:
  # Node.js Server Build
  build-server:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com

      - name: Build Server Image
        run: docker build -t litenote-server:1.0 ./server

      - name: Tag Server Image
        run: docker tag litenote-server:1.0 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0

      - name: Push Server Image
        run: docker push 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0
      - name: Delete Untagged Server Images From AWS ECR
        run: >
             aws ecr batch-delete-image
             --repository-name litenote-server
             --region eu-north-1
             --cli-input-json "{\"imageIds\": $(aws ecr list-images --repository-name litenote-server --region eu-north-1 --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output json)}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Tag Server Image for Docker Hub
        run: docker tag litenote-server:1.0 nextverseorganization/litenote-server:1.0
      - name: Push Server Image To Docker Hub
        run: docker push nextverseorganization/litenote-server:1.0
  # React Client Build
  build-client:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com
      - name: Create .env file for React
        run: |
         echo "VITE_REACT_BACKEND_SERVER_URL=${{ secrets.VITE_REACT_BACKEND_SERVER_URL }}" >> ./client/.env
         echo "VITE_REACT_RECAPTCHA_CLIENT_SIDE_INTEGRATION_SECRET_KEY=${{ secrets.VITE_REACT_RECAPTCHA_CLIENT_SIDE_INTEGRATION_SECRET_KEY }}" >> ./client/.env
         echo "VITE_REACT_DROPBOX_APP_KEY=${{ secrets.VITE_REACT_DROPBOX_APP_KEY }}" >> ./client/.env
         echo "VITE_REACT_DROPBOX_APP_SECRET=${{ secrets.VITE_REACT_DROPBOX_APP_SECRET }}" >> ./client/.env
         echo "VITE_REACT_GOOGLE_GEMINI_API_KEY=${{ secrets.VITE_REACT_GOOGLE_GEMINI_API_KEY }}" >> ./client/.env
         echo "VITE_REACT_GOOGLE_DRIVE_CLIENT_ID=${{ secrets.VITE_REACT_GOOGLE_DRIVE_CLIENT_ID }}" >> ./client/.env
         echo "VITE_REACT_GOOGLE_DRIVE_API_KEY=${{ secrets.VITE_REACT_GOOGLE_DRIVE_API_KEY }}" >> ./client/.env
         echo "VITE_REACT_GOOGLE_AUTHENTICATION_CLIENT_ID=${{ secrets.VITE_REACT_GOOGLE_AUTHENTICATION_CLIENT_ID }}" >> ./client/.env
         echo "VITE_REACT_GOOGLE_AUTHENTICATION_REDIRECT_URI=${{ secrets.VITE_REACT_GOOGLE_AUTHENTICATION_REDIRECT_URI }}" >> ./client/.env
         
      - name: Build Client Image
        run: docker build --no-cache -t litenote-client:1.0 ./client

      - name: Tag Client Image
        run: docker tag litenote-client:1.0 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-client:1.0

      - name: Push Client Image
        run: docker push 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-client:1.0
      - name: Delete Untagged Client Images From AWS ECR
        run: >
             aws ecr batch-delete-image
             --repository-name litenote-client
             --region eu-north-1
             --cli-input-json "{\"imageIds\": $(aws ecr list-images --repository-name litenote-client --region eu-north-1 --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output json)}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Tag Client Image for Docker Hub
        run: docker tag litenote-client:1.0 nextverseorganization/litenote-client:1.0
      - name: Push Client Image To Docker Hub
        run: docker push nextverseorganization/litenote-client:1.0

  # Server Deployment
  deploy-server:
    needs: build-server
    runs-on: self-hosted
    steps:
      - name: Login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com

      - name: Pull Server Image
        run: docker pull 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0

      - name: Remove old container
        run: docker rm -f litenote-server || true
      - name: Remove old Image
        run: docker image prune -f
      - name: Print Current Directory
        run: pwd
      - name: Run Server Container
        run: docker run --env-file litenote-server-environment.txt -d -p 5000:5000 --name litenote-server 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0

  # Client Deployment
  deploy-client:
    needs: build-client
    runs-on: self-hosted
    steps:
      - name: Login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com

      - name: Pull Client Image
        run: docker pull 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-client:1.0

      - name: Remove old container
        run: docker rm -f litenote-client || true
      - name: Remove old Image
        run: docker image prune -f
      - name: Run Client Container
        run: docker run -d -p 8080:80 --name litenote-client 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-client:1.0



