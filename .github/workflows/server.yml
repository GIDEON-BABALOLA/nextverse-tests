name: Deploy Node Application
on:
   push:
     branches:
       - master
jobs:
   build:
     runs-on: ubuntu-latest
     env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
     steps:
       - name: Checkout source
         uses: actions/checkout@v4
       - name: Logging in to AWS Elastic Container Registry
         run:  aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com
       - name: Build Docker Image
         run:  docker build -t litenote-server:1.0 ./server
       - name: Tag Docker Image
         run:  docker tag litenote-server:1.0 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0
       - name: Publish Image to AWS Elastic Container Registry
         run:  docker push 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0
   deploy:
     needs: build
     runs-on: self-hosted
     env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
     steps:
      - name: Logging in to AWS Elastic Container Registry
        run:  aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 884435848326.dkr.ecr.eu-north-1.amazonaws.com
      - name: Pull Image from AWS Elastic Container Registry
        run:  docker pull 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0
      - name: Delete old container
        run:  docker rm -f 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server
      - name: Print current directory
        run: pwd
      - name: Run Litenote Server
        run: docker run --env-file litenote-server-environment.txt -d -p 5000:5000 --name litenote-server 884435848326.dkr.ecr.eu-north-1.amazonaws.com/litenote-server:1.0